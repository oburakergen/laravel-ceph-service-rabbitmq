services:
#  user-service:
#    restart: always
#    build:
#      context: ./user-service
#    container_name: user-service
#    depends_on:
#      - mysql
#      - rabbitmq
#      - minio
#    ports:
#      - "8001:9000"
#    volumes:
#      - ./user-service:/var/www
#    environment:
#      - DB_HOST=mysql
#      - DB_DATABASE=user_service
#      - DB_USERNAME=root
#      - DB_PASSWORD=secret
#    networks:
#      - app-network
#
#  license-service:
#    restart: always
#    build:
#      context: ./license-service
#    container_name: license-service
#    depends_on:
#      - mysql
#      - rabbitmq
#      - minio
#    ports:
#      - "8002:9000"
#    volumes:
#      - ./license-service:/var/www
#    environment:
#      - DB_HOST=mysql
#      - DB_DATABASE=license_service
#      - DB_USERNAME=root
#      - DB_PASSWORD=secret
#    networks:
#      - app-network
#
#  file-management-service:
#    build:
#      context: ./file-management-service
#    container_name: file-management-service
#    ports:
#      - "8003:9000"
#    depends_on:
#      - mysql
#      - rabbitmq
#      - minio
#    volumes:
#      - ./file-management-service:/var/www
#    environment:
#      - DB_HOST=mysql
#      - DB_DATABASE=file_management_service
#      - DB_USERNAME=root
#      - DB_PASSWORD=secret
#    networks:
#      - app-network
#
#  notification-service:
#    build:
#      context: ./notification-service
#    container_name: notification-service
#    ports:
#      - "8004:9000"
#    volumes:
#      - ./notification-service:/var/www
#    depends_on:
#      - mysql
#      - rabbitmq
#      - minio
#    environment:
#      - DB_HOST=mysql
#      - DB_DATABASE=notification_service
#      - DB_USERNAME=root
#      - DB_PASSWORD=secret
#    networks:
#      - app-network
#
#
#  object-storage-service:
#    build:
#      context: ./object-storage-service
#    container_name: object-storage-service
#    ports:
#      - "8005:9000"
#    volumes:
#      - ./notification-service:/var/www
#    depends_on:
#      - mysql
#      - rabbitmq
#      - minio
#    environment:
#      - DB_HOST=mysql
#      - DB_DATABASE=object_storage_service
#      - DB_USERNAME=root
#      - DB_PASSWORD=secret
#    networks:
#      - app-network


  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  minio_data:
    driver: local